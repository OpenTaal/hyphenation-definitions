


Internet Engineering Task Force (IETF)                    S. van Geloven
Request for Comments: TODO                                      OpenTaal
Category: Informational                                     January 2014
ISSN: 2070-1721


     A standard for prioritised and dynamic hyphenation definitions

Abstract

<1>
   This document describes a standard for hyphenation definitions
   enabling the generation of prioritised and dynamic hyphenation
   patterns.  In the early nineteen-eighties, automatic hyphenation of
   lexical items has been made possible by a hyphenator using language-
   specific hyphenation patterns.  These patterns are generated by the
   hyphenation software community from hyphenated word lists.  The
   initial design was based on the English orthography and limited
   character encoding.  Support for extended encodings was added in the
   1990s mostly for Western languages.  However, the hyphenated word
   list format remained rather unchanged.  This complicated the support
   of specific morphological or phonological structures, requiring
   hyphenation priority in compounds or dynamic hyphenation resulting in
   altered spelling.  Although over 70 languages are supported now,
   hyphenation is suboptimal and impossible for languages relying on a
   universal character encoding.  This limited method of hyphenation has
   been catering to digital typesetting over three decades.
   Unfortunately, recently implemented hyphenation in layout engines for
   web page rendering is built upon the same outdated technology.  An
   improved hyphenator and extended hyphenation patterns are necessary
   to overcome current limitations and support a wider range of
   languages.  To achieve this, the software community needs a standard
   format for hyphenation definitions in universal human-readable
   hyphenated word lists.  A context-free grammar was developed with
   unambiguous and fine-grained control allowing enhanced hyphenation.
   All language-specific cases are illustrated with examples and
   lexicological theory.  Our standard for hyphenation definitions
   enables improved automatic hyphenation for printed media and web
   documents.

Status of this Memo

   This document is not an Internet Standards Track specification; it is
   published for informational purposes.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the



van Geloven                   Informational                     [Page 1]

RFC TODO            Hyphenation Definitions Standard        January 2014


   Internet Engineering Steering Group (IESG).  Not all documents
   approved by the IESG are a candidate for any level of Internet
   Standard; see Section 2 of RFC 5741.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   http://www.rfc-editor.org/info/rfcTODO.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





























van Geloven                   Informational                     [Page 2]

RFC TODO            Hyphenation Definitions Standard        January 2014


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
     1.1.  Requirements language  . . . . . . . . . . . . . . . . . .  4
     1.2.  Language tags  . . . . . . . . . . . . . . . . . . . . . .  4
     1.3.  Character encoding . . . . . . . . . . . . . . . . . . . .  4
     1.4.  Format description . . . . . . . . . . . . . . . . . . . .  4
     1.5.  Design decisions . . . . . . . . . . . . . . . . . . . . .  5
   2.  Hyphenation  . . . . . . . . . . . . . . . . . . . . . . . . .  6
     2.1.  Hyphenation in general . . . . . . . . . . . . . . . . . .  6
     2.2.  Automated hyphenation  . . . . . . . . . . . . . . . . . .  6
     2.3.  History  . . . . . . . . . . . . . . . . . . . . . . . . .  7
     2.4.  Applications that hyphenate  . . . . . . . . . . . . . . .  7
   3.  Basic format . . . . . . . . . . . . . . . . . . . . . . . . . 10
     3.1.  Main structure . . . . . . . . . . . . . . . . . . . . . . 10
     3.2.  Hyphenation definition in general  . . . . . . . . . . . . 11
     3.3.  Hyphenation definition for a word  . . . . . . . . . . . . 14
     3.4.  Hyphenation definition for a word prefix . . . . . . . . . 16
     3.5.  Hyphenation definition for a word suffix . . . . . . . . . 16
   4.  Extended format  . . . . . . . . . . . . . . . . . . . . . . . 18
     4.1.  Hyphenation definition for a compound  . . . . . . . . . . 18
     4.2.  Hyphenation definition for a compound prefix . . . . . . . 20
     4.3.  Hyphenation definition for a compound suffix . . . . . . . 20
     4.4.  Hyphenation definition for a compound interfix . . . . . . 21
     4.5.  Unfavourable hyphenation . . . . . . . . . . . . . . . . . 22
   5.  Dynamic hyphenation  . . . . . . . . . . . . . . . . . . . . . 24
     5.1.  Hyphenation with alternated spelling . . . . . . . . . . . 24
     5.2.  Hyphenation of heteronyms  . . . . . . . . . . . . . . . . 26
     5.3.  Nested hyphenation . . . . . . . . . . . . . . . . . . . . 28
   6.  Hyphenation priority . . . . . . . . . . . . . . . . . . . . . 30
   7.  Reserved characters  . . . . . . . . . . . . . . . . . . . . . 31
   8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 32
   Appendix A.  Grammar . . . . . . . . . . . . . . . . . . . . . . . 33
   Appendix B.  Acknowledgements  . . . . . . . . . . . . . . . . . . 36
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 37
















van Geloven                   Informational                     [Page 3]

RFC TODO            Hyphenation Definitions Standard        January 2014


1.  Introduction
<2>
   The last decades has seen automated hyphenation of text being born
   and has experienced several growth spurts.  The hyphenation patterns
   currently used by the hyphenation algorithm cannot offer prioritised
   or dynamic hyphenation, unfortunately.  To enable the next
   developmental leap to overcome this, these patterns need to be
   generated from prioritised and dynamic hyphenation definitions.  A
   detailed and illustrated standard for these definitions is described
   in this document.

1.1.  Requirements language
<3>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119]
   only when they appear in all upper case.  They may also appear in
   lower or mixed case as English words, without special meaning.

1.2.  Language tags
<4>
   References to specific orthographies are made according to BCP 47
   [BCP47].  For example "de-CH-1996" represents German as used in
   Switzerland and as written using the spelling reform beginning in the
   year 1996 and "de-1901" represents the German orthography reform of
   1901.

1.3.  Character encoding
<5>
   References to specific characters in this document are always done
   via Unicode [UNICODE] characters and code points.  A Unicode code
   point can be recognised by a capital U, followed by a plus sign and
   followed by four to six hexadecimal digits.  Usually, four or five
   digits are being used.  A Unicode character is shown between single
   quotation marks and the Unicode name of the character is written in
   all capitals.  An example code point is U+003D to indicate the
   character '=' which is known as the EQUALS SIGN.

1.4.  Format description
<6>
   The format is formally described by a grammar in Extended Backus-Naur
   Form (EBNF) [ISO14977].  This notation enables that hyphenation
   definitions can be written, validated and parsed by a context-free
   grammar.  Rules and comments for this grammar are recognised by
   respectively ::= and /* in this document.  The syntax of all
   accompanying examples, recognisable by a #, always conforms to this
   grammar.




van Geloven                   Informational                     [Page 4]

RFC TODO            Hyphenation Definitions Standard        January 2014


1.5.  Design decisions
<7>
   Compiling an international standard involves making many decisions
   and is not always a trivial task.  For example, choosing reserved
   characters results in checking if that character is not being used in
   words.  Words are normally considered as a concatenation of
   characters separated by spaces or punctuation, but this differs
   substantially amongst written languages.  What might be a practical
   choice for one language could be incompatible with another language.
   Likewise, this standard does not concern itself with the validity of
   the resulting hyphenations.  This is left up to the users as
   languages, and even dialects, have different rules and exceptions
   based on etymological, morphological or phonetic principles.  Key is
   that the designed format aims to offer a maximum degree of freedom
   and flexibility for the end user.




































van Geloven                   Informational                     [Page 5]

RFC TODO            Hyphenation Definitions Standard        January 2014


2.  Hyphenation
<8>
   TODO general introduction and example
   # Examples of hyphenated text.
   #
   #    An extre-         Een boom met prui-
   #    mely long         men die men als ei-
   #    English           eren beschrijft be-
   #    word over-        treft de omgvang.
   #    looking a         Iemand wilde pluk-
   #    nice sen-         ken zonder toestem-
   #    temce as          ming te hebben. Er
   #    a beauti-         werd ook nog gespro-
   #    ful exam-         ken dat hij een har-
   #    ple here.         tendiefje was.

2.1.  Hyphenation in general
<9>
   TODO general concept

2.2.  Automated hyphenation
<10>
   TODO the challenge and paper/webpage create word list for language or
   dialect generate suggested hyphenation definitions manually review
   hyphenation definitions


























van Geloven                   Informational                     [Page 6]

RFC TODO            Hyphenation Definitions Standard        January 2014


   Process of delivering automated hyphenation

       +---------------------+
       |   word list for a   |
       | language or dialect |
       +---------------------+
                  || automated syllabilification
                  \/
     +-------------------------+
     |     working set of      |
     | hyphenation definitions |
     +-------------------------+
                  || manual review and
                  \/ automated validation
         +-----------------+
         | +-------------+ |
         | | HYPHENATION | |
         | | DEFINITIONS | |
         | +-------------+ |
         +-----------------+
                  || preprocessing by
                  \/ hyphenation algorithm
       +----------------------+
       | hyphenation patterns |
       | to ship in software  |
       +----------------------+
                  || real-time use of
                  \/ hyphenation algorithm
         +------------------+
         | hyphenated text  |
         +------------------+

2.3.  History
<11>
   TODO implementations and patgen and refs todo [Lia83] todo [Nem06]
   asdf [TRENNMP]

2.4.  Applications that hyphenate
<12>
   Improving automated hyphenation affects all software applications
   depending on it.  To indicate the impact of a change it is important
   to list affected products and organisations.  The following
   applications currently use hyphenation patterns which originate from
   patgen:
<13>
   o  document preparation systems based on TeX





van Geloven                   Informational                     [Page 7]

RFC TODO            Hyphenation Definitions Standard        January 2014


<14>
      *  Babel - TeX's and LaTeX's multilingual typesetting
<15>
      *  polyglossia - XeLaTeX's and LuaLaTeX's multilingual typesetting

<16>
   o  hyphenation and justification with libhyphen
<17>
      *  LibreOffice - The Document Foundation's office suite
<18>
      *  Apache OpenOffice - Apache Software Foundation's office suite
<19>
      *  Inkscape* - a vector graphics editor
<20>
      *  GIMP - a raster graphics editor
<21>
      *  Scribus - desktop publishing software
<22>
      *  InDesign - Adobe's desktop publishing software
<23>
      *  Illustrator - Adobe's vector graphics editor

<24>
   o  client-side hyphenation in JavaScript with hyphenator.js
<25>
   o  layout engines for rendering web pages
<26>
      *  Gecko by Mozilla
<27>
         +  Firefox - Mozilla's web browser
<28>
         +  Thunderbird - Mozilla's e-mail and news client
<29>
         +  Firefox for mobile - Mozilla's web browser for Android

<30>
      *  WebKit by Apple and Adobe
<31>
         +  Safari - Apple's web browser
<32>
         +  Konqueror - KDE's web browser and file manager

<33>
      *  Blink by Google
<34>
         +  Chromium and Chrome - Google's web browsers





van Geloven                   Informational                     [Page 8]

RFC TODO            Hyphenation Definitions Standard        January 2014


<35>
         +  Opera - Opera's web browser
<36>
         +  Web Browser - Google's default web browser for Android

   * Implementation of automated hyphenation for Inkscape is planned for
   the near future.
<37>
   This overview does not endorse or favour the use of any of these
   applications and respects registered trademarks where applicable.  It
   is merely included to illustrate the wide spectrum of applications
   employing hyphenation patterns.







































van Geloven                   Informational                     [Page 9]

RFC TODO            Hyphenation Definitions Standard        January 2014


3.  Basic format
<38>
   This section describes the basic format for hyphenation patterns.
   These are usually stored in computer files but can also be in
   databases or memory.  The structure will be described step by step in
   which the grammar for this format is extended and example usage is
   illustrated.  The syntax of all examples complies to the grammar of
   this format.

3.1.  Main structure
<39>
   In order to support as many languages as possible, this format for
   hyphenation definitions MUST use the Unicode character in an UTF-8
   encoding.  A set of hyphenation definitions MAY have one or more
   lines.  Each line MAY have, in the following order:
<40>
   1.  a hyphenation definition,
<41>
   2.  white space,
<42>
   3.  and/or comments.

   This is the the top-level or main structure of the entire format.
   The syntax for hyphenation definitions in Extended Backus-Naur Form
   (EBNF) will therefore be:
   HyphenationDefinitions
            ::= ( EOL* HyphenationDefinition? WhiteSpace? Comment? )*

<43>
   Here EOL stands for an end of line.  An end of line MUST have a LINE
   FEED (LF) or U+000A and MAY have a CARRIAGE RETURN (CR) or U+000D.
   This is written in EBNF as:
   EOL
            ::= ( '\r' | #x000D ) ( '\n' | #x000A )?
              | ( '\n' | #x000A )

<44>
   White space can be inserted to improve human readability of
   hyphenation definitions but is OPTIONAL.  When used, it SHALL contain
   only SPACE U+0020 or CHARACTER TABULATION U+0009 characters.  White
   space in EBNF is:
   WhiteSpace
            ::= ( ( ' ' | #x0009 )
                | ( '\t' | #x0020 ) )+

<45>
   A comment MUST start with a NUMBER SIGN U+0023 or '#' and MAY contain
   any combination of printable characters thereafter.  Comments MUST



van Geloven                   Informational                    [Page 10]

RFC TODO            Hyphenation Definitions Standard        January 2014


   NOT contain control characters that can result in an end of line,
   however the CHARACTER TABULATION U+0009 MAY be used in comments.  In
   EBNF a comment is:
   Comment
            ::= '#' ( [#x0009]
                    | [#x0020-#xD7FF]
                    | [#xE000-#xFFFD]
                    | [#x10000-#x10FFFF] )*

<46>
   With the definition of the main structure, without any actual
   hyphenation definition, it is possible store data in this format.  An
   example with end of lines, white space and comments is:
   # This is the first line with only a comment

   # This is the third line after an empty second line.
           ## After some whitespace, this is the fourth line.    #    #
   # Comments can use most of the reserved characters, e.g. {}[]/|~=.; #
   # and Unicode orthographys, e.g.
   # &#1088;&#1091;&#769;&#1089;&#1089;&#1082;&#1080;&#1081;
   # &#1103;&#1079;&#1099;&#769;&#1082;,
   # j&#281;zyk polski and
   # &#949;&#955;&#955;&#951;&#957;&#953;&#954;&#942;
   # &#947;&#955;&#974;&#963;&#963;&#945;

<47>
   This completes the description of the the main structure which is
   processed in a line-by-line way.

3.2.  Hyphenation definition in general
<48>
   A hyphenation definition is the essential part of this format and
   MUST have, in this order:
<49>
   1.  a word,
<50>
   2.  a delimiter,
<51>
   3.  and a definition.

   This is where the actual hyphenation definition is provided for a
   word.  A word is REQUIRED to be unique amongst all definitions in a
   single file because it is the unique key for looking up a hyphenation
   definition.  A hyphenation definition in EBNF is written as:
   HyphenationDefinition
            ::= Word Delimiter Definition

<52>



van Geloven                   Informational                    [Page 11]

RFC TODO            Hyphenation Definitions Standard        January 2014


   The delimiter MUST be a SEMICOLON ';' or U+003B. In EBNF this is:
   Delimiter
            ::= ';' | #x003B

<53>
   A word MUST be a concatenation of at least two characters:
   Word
            ::= Character Character+

<54>
   Most Western languages would use a word with minimum of four
   characters to consider it a candidate for hyphenation.  In case of
   hyphenation these languages require a minimum of two characters
   before and after hyphenation.  The hyphenation character inserted is
   usually a HYPHEN-MINUS U+002D or '-'.  However, some languages have a
   lexicography with a different set rules for hyphenation.
<55>
   Modern Greek, however, allows hyphenation directly after a single
   character prefix.  Another counterexample is the Ge'ez language.  It
   uses a ETHIPOIC WORDSPACE or U+1361 to separate words.  This language
   has no need for a hyphen character at the end of a line because no
   ambiguous situation can arise whether a word end at an end of line or
   not.  This allows for hyphenation of a single character at the end of
   a word.
<56>
   For the reasons this format allows hyphenation definitions for words
   with a minimum of two characters.  It is up to the user to enforce
   stricter rules for a greater minimum word length if needed.  These
   are parameters of the hyphenation algorithm preprocessor to ignore
   words that are too short.
<57>
   A character in a word MUST be a printable character and MUST NOT be a
   control character such as LINE FEED or CHARACTER TABULATION and MUST
   NOT be a reserved character such as SPACE U+0020 ' ' or NUMBER SIGN
   U+0023 '#' is discussed.  Without going into detail of other reserved
   characters, the definition of a character in EBNF is:















van Geloven                   Informational                    [Page 12]

RFC TODO            Hyphenation Definitions Standard        January 2014


   Character
            ::= [#x0021-#x0022]
              | [#x0024-#x002D]
              | [#x0030-#x003A]
              | [#x003C]
              | [#x003E-#x005A]
              | [#x005C]
              | [#x005E]
              | [#x0060-#x007A]
              | [#x007F-#x00A5]
              | [#x00A7-#xD7FF]
              | [#xE000-#xFFFD]
              | [#x10000-#x10FFF]

<58>
   Instead of providing a hyphenation definition it is possible to
   repeat the word after the delimiter without providing any hyphenation
   information.  The grammar rule for definition will allow this.  A
   hyphenation definition repeating the word means that this word SHALL
   NOT be hyphenated at all.  A hyphenation definition MAY be given, but
   when non is provided for a certain word then hyphenation for that
   word is undefined.  Some minimal examples in the format as it is
   described until here are:
   # too short English words not allowed to be hyphenated
   #a;a
   #at;at
   #are;are # too short for hyphenation according to the language

   # English words not to be hyphenated
   door;door
   eight;eight

   # German words not to be hyphenated
   amorph;amorph
   schnarchst;schnarchst

   # Dutch words not to be hyphenated
   schrijft;schrijft
   V-snaar;V-snaar # note that '-' is considered a normal character

   # acronyms not to be hyphenated
   UNESCO;UNESCO
   unicef;unicef

   # hyphenation is undefined when no hyphenation definition is given
   #impeachment;impeachment





van Geloven                   Informational                    [Page 13]

RFC TODO            Hyphenation Definitions Standard        January 2014


3.3.  Hyphenation definition for a word
<59>
   A hyphenation definition in the most simple form MUST contain two or
   more clusters of characters that are separated by a hyphenation
   point.  Combined with the previous description of preventing
   hyphenation by repeating the word, the EBNF grammar rule for
   definition is:
   Definition
            ::= Cluster ( Hyphen Cluster )*

<60>
   A character cluster here MUST consist of at least one character.
   This basic form is already supported by the current hyphenation
   algorithm and is key to the concept of hyphenation.  More intricate
   schemes of clusters and hyphenations will be discussed later on but
   are already referred to in the following EBNF bridging from cluster
   to character clusters:
   Cluster
            ::= ( CharacterCluster
                | SubstitutionCluster
                | HeteronymCluster )+
   CharacterCluster
            ::= Character+

<61>
   The concatenation of different clusters only applies in combination
   with a substitution cluster or heteronym cluster, as will be
   demonstrated later on.  This is because consecutive character
   clusters have the same syntax as a single character cluster.  These
   are merely more characters added in the same way and will therefore
   MUST NOT be regarded as separate character clusters.
<62>
   The final construct required to allow for simple hyphenation
   definitions is a reserved character to separate the clusters of
   characters which are also known as morphemes.  Here one or more TILDE
   characters '~' or U+007E MUST be used as a morpheme hyphen.  In the
   following rules allow also for more intricate hyphenation yet the
   morpheme hyphen is:
   Hyphen
            ::= MorphemeHyphen
              | SuffixHyphen
              | PrefixHyphen
              | CompoundHyphen
              | CompoundSuffixHyphen
              | CompoundPrefixHyphen
              | UnfavourableHyphen
   MorphemeHyphen
            ::= ( '~' | #x007E )+



van Geloven                   Informational                    [Page 14]

RFC TODO            Hyphenation Definitions Standard        January 2014


<63>
   Some simple examples of hyphenation definitions for words are:
   # English word with hyphenation definition
   revolve;re~volve # "volve" may not be hyphenated
   editor;ed~i~tor # character cluster of single character

   # German words with hyphenation definition
   Aale;Aa~le # possible hyphenation is "Aa-" "le"
   kuehle;kueh~le # possible hyphenation is "kueh-" "le"

   # Dutch words with hyphenation definition
   alle;al~le # possible hyphenation is "al-" "le"
   gezellig;ge~zel~lig # "ge-" "zellig" or "gezel-" "lig"

   # Polish word with uncommon hyphenation definition
   kung-fu;kung~-fu # possible is "kung-" "-fu"

   # Modern Greek
   # note hyphenation directly after one character
   #&#940;&#964;&#945;&#954;&#964;&#959;&#962;;
   #&#940;~&#964;&#945;~&#954;&#964;&#959;&#962;

<64>
   Up to this point the functionality of the previous format for
   hyphenation patterns as used by patgen2 is similar.  Everything
   described in this format from this point onwards is newly proposed
   functionality.
<65>
   A hyphenation point SHALL be defined by one or more tildes.  A
   hyphenation point of higher priority MUST have at least a tilde extra
   compared to lower priority hyphenation points.  Some examples to
   illustrate prioritised hyphenation definitions in words are:
   # English words with prioritised hyphenation
   ergonomic;er~go~~no~mic # because of (er + go) + (no + mic)
   thesauruses;the~sau~~rus~es

   # French words with prioritised hyphenation
   portemonnaie;por~te~~mon~naie # because of (por + te) + (mon naie)
   atmosphere;at~mo~~sphe~re # because of (at + mo) + (sphe + re)

<66>
   The structure of the words is broken down in the comments with the
   use of brackets '(' and ')' and plus sign '+'.  This is a form of
   syllabification which is extended with semantic information and is
   used only as a suggestion of advise for hyphenation points.  This is
   not part of the format but is only used to explain the examples of
   the format.




van Geloven                   Informational                    [Page 15]

RFC TODO            Hyphenation Definitions Standard        January 2014


3.4.  Hyphenation definition for a word prefix
<67>
   Many languages allow usage of a prefix to alter the meaning of a
   word.  Here a VERTICAL LINE U+007C or '|' MAY be used to indicate a
   hyphenation point for a prefix.  This enables reusing the hyphenation
   definition of the word.  Hyphenation directly after a prefix has a
   small priority over a normal hyphenation point.  Prefixes are
   semantically built from right to left for a left-to-right script.
   Therefore priority amongst prefixes are from left to right for a
   left-to-right script.  Syntax for defining hyphenation of a prefix
   should comply to the following EBNF:
   PrefixHyphen
            ::= '|' | #x007C

<68>
   Some examples of hyphenation definitions including a prefix are:
   # English words with prefix
   # dis < ap + pear
   disappear;dis|ap~pear
   # su + pra < or + bit + al
   supraorbital;su~pra|or~bit~al

   # German words with prefix
   # ent < deckt <<discouvered>>
   entdeckt;ent|deckt
   # Re < kon < struk + ti + on <<reconstruction>>
   Rekonstruktion;Re|kon|struk~ti~on

   # Dutch words with prefix
   # ge < wil + lig <<willing>>
   gewillig;ge|wil~lig
   # her < be < re + ke + nen <<to recalculate>>
   herbereken;her|be|re~ke~nen

<69>
   In the comments the prefixes are indicated with a smaller-than sign
   which precedes evaluation of the plus sign.  Sometimes the comments
   on examples provide the meaning of the word in between double
   guillemets.  These are '<<' and '>>'.  These help understanding the
   examples which are from languages other than English but are not part
   of this standard.

3.5.  Hyphenation definition for a word suffix
<70>
   A suffix can be identified in a similar way as is done for prefixes
   (Section 3.4).  Instead of a vertical line a BROKEN BAR U+00A6 or '|'
   MAY be used for suffixes.  In EBNF this is:




van Geloven                   Informational                    [Page 16]

RFC TODO            Hyphenation Definitions Standard        January 2014


   SuffixHyphen
            ::= '|' | #x00A6

<71>
   This is not found easily in German because spelling and hyphenation
   changes of the base word to the prefix is attached.  Some examples
   are:
   # English words with suffix
   # broth + er > hood
   brotherhood;broth~er|hood
   # re + morse > less > ness
   remorselessness;re~morse|less|ness

   # German word with suffix
   # wahr + schein > lich <<probably>>
   wahrscheinlich;wahr=schein|lich
   # Un < sich + er > heit <<uncertainty>>
   Unsicherheit;Un|si~cher|heit

   # Dutch words with suffix
   # een > zaam > heid <<loneliness>>
   eenzaamheid;een|zaam|heid
   # beest > ach~tig <<beastly>>
   beestachtig;beest|ach~tig

<72>
   The comments use a greater-than sign to explain the structure where
   suffixes build from left to right, gaining priority in this way for a
   left-to-right script.  A hyphenation point for a suffix has greater
   priority than hyphenation on a prefix.





















van Geloven                   Informational                    [Page 17]

RFC TODO            Hyphenation Definitions Standard        January 2014


4.  Extended format

4.1.  Hyphenation definition for a compound
<73>
   Many languages can concatenate words to form long compounds, real-
   life examples from Western languages are:
   # long compound without spaces in German
   #Rindfleischetikettierungsueberwachungsaufgabenuebertragungsgesetz

   # long compound without spaces in Dutch
   #aansprakelijkheidswaardevaststellingsveranderingen

   # long compound without spaces in Hungarian
   #megszentsegtelenithetetlensegeskedeseitekert

   # long compound without spaces in English
   #pneumonoultramicroscopicsilicovolcanoconiosis

<74>
   These are extremes but it is also possible in for example English to
   concatenate words to form long compounds.  This is less common as
   spaces are usually found in English compounds and for those cases
   hyphenation is less problematic.
<75>
   Hyphenation definitions of compounds should be made with a different
   reserved character.  The EQUALS SIGN U+003D or '=' MUST be used to
   indicate hyphenation on compound level.  This prevents long series of
   tildes in complex compounds and allows for automated generation,
   suggestion or validation of hyphenation patterns for compounds.  In
   EBNF, this is:
   CompoundHyphen
            ::= ( '=' | #x003D )+

<76>
   Examples of hyphenation definitions for compounds are:
















van Geloven                   Informational                    [Page 18]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # English compounds
   # small + talk
   smalltalk;small=talk
   # (bit + ter) + sweet
   bittersweet;bit~ter=sweet

   # German compounds
   # Grenz + schutz + amt <<border patrol office>>
   Grenzschutzamt;Grenz=schutz=amt
   # Herz + still + stand <<cardiac arrest>>
   Herzstillstand;Herz=still=stand

   # Dutch compounds
   # boek + (om + slag) <<book cover>>
   boekomslag;boek=om~slag
   # trein + (wa + gon) <<train carriage>>
   treinwagon;trein=wa~gon

<77>
   A hyphenation point for a compound SHALL be defined by one or more
   equals signs.  A hyphenation point of higher priority MUST have at
   least an equals sign extra compared to lower priority hyphenation
   points for compounds.  This is similar to hyphenation point
   priorities in definitions for words (Section 3.3).  Some examples to
   illustrate prioritised hyphenation definitions in compounds are:
   # German
   # Erb + (lehn + gut) [lit: inheritened loan property]
   Erblehngut;Erb==lehn=gut
   # Fach + (werk + statt) <<crafts workshop>>
   Fachwerkstatt;Fach==werk=statt
   # Berg + ((fuenf + (fin + ger)) + kraut)
   # [lit: mountain five-finger herb]
   Bergfuenffingerkraut;Berg===fuenf=fin~ger==kraut
   # (See + (schiff + fahrt)) + (stra + sse)
   # <<sea traffic shipping lane>>
   Seeschifffahrtstrasse;See==schiff=fahrt===stra-sse

   # Dutch
   # ((goe + de + ren) + trein) + (wa + gon)
   # <<cargo train carriage>>
   goederentreinwagon;goe~de~ren=trein==wa~gon

<78>
   Hyphenation point for a compound MUST be treated with a higher
   priority than that of a suffix.






van Geloven                   Informational                    [Page 19]

RFC TODO            Hyphenation Definitions Standard        January 2014


4.2.  Hyphenation definition for a compound prefix
<79>
   Compounds can also have a prefix.  These are defined in a similar way
   as a prefix of a word (Section 3.4).  A combination of a VERTICAL
   LINE U+007C or '|' followed directly by a EQUALS SIGN U+003D or '='
   MAY be used to indicate a prefix of a compound.  In EBNF this is:
   CompoundPrefixHyphen
            ::= ( '|' | #x007C ) ( '=' | #x003D )+

<80>
   Examples are:
   # German compounds with prefix
   # un < wahr + (schein + lich) <<unlikely>>
   unwahrscheinlich;un|=wahr=schein~lich
   # Ur < gross + (el + tern) <<great-grandparents>>
   Urgrosseltern;Ur|=gross=el~tern

   # Dutch compound with prefix
   # on < waar + (schijn + lijk) <<unlikely>>
   onwaarschijnlijk;on|=waar=schijn~lijk

<81>
   Here the number of equals signs match the number of equals sign of
   the compound hyphenation this prefix is related to.  Compound
   prefixes are extended from right to left and are prioritised from
   left to right for a left-to-right script.

4.3.  Hyphenation definition for a compound suffix
<82>
   CompoundSuffixHyphen
            ::= ( '=' | #x003D )+ ( '|' | #x00A6 )

<83>
   Examples are rare but some are:

















van Geloven                   Informational                    [Page 20]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # German compounds with suffix
   # (an + dert) + halb > fach
   anderthalbfach;an~dert=halb=|fach
   # zier + rat > lo + se
   zierratlose;zier=rat=|lo~se
   # (zu < sam + men) + hang > los
   zusammenhanglos;zu|sam~men=hang=|los

   # Dutch compounds with suffix
   # (li + te + ra + tuur) + (we + ten > schap) > je
   # [lit: diminitive of literature science]
   # it is lexologically the diminitive of science
   # but semantically diminutive of the entire compound
   literatuurwetenschapje;li~te~ra~tuur=we~ten|schap=|je
   # (on < (sa + men) + (han + gend)) > heid
   # <<incoherentness>>
   onsamenhangendheid;on|sa~men=han~gend=|heid

<84>
   The number of equals signs are the same as the number of equals sign
   of the compound hyphenation this suffix is related to.  This is
   similar to word suffix (Section 3.5) and compound prefix
   (Section 4.2).  Compound suffixes are extended from left to right and
   are prioritised from right to left for a left-to-right script, albeit
   that nested compound suffixes will be extremely rare.

4.4.  Hyphenation definition for a compound interfix
<85>
   With the format for hyphenation definitions described up to this
   point it is possible to define hyphenation definitions for compounds,
   even if they have an interfix.  Interfixes are common in some
   languages as a linking element in compounds without a semantic
   meaning but usually to improve pronunciation.  Hyphenation has no
   special requirements to indicate interfixes.  However, it is
   practical to be able to annotate interfixes to be able to identify
   the separate words from which the compound has been formed.  In this
   way the hyphenation definition of the compound can be automatically
   generated, suggested or validated.  Additionally this information
   could be used for decomposition to validate and extend spell
   checking.
<86>
   There are no grammar rules for this at the moment because this part
   of the format is still under discussion.  The characters used in the
   following example are the LESS-THAN SIGN U+003C and GREATER-THAN SIGN
   U+003E and could become reserved characters in the future.  Interfix
   annotations can simply be filtered out before hyphenation patterns
   are used as input to the hyphenation algorithm.




van Geloven                   Informational                    [Page 21]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # German interfix
   # (Arbeit + s) + zimmer <<working room>>
   Arbeitszimmer;Ar~beits=zim~mer # could be Ar~beit<s>=zim~mer

   # Dutch interfix
   # (kip + (p + en)) + soep <<chickensoup>>
   kippensoep;kip~.pen=soep
   # could be;kip<~.pen>=soep
   # ((be + roep) + s) + ethiek <<professional ethics>>
   beroepsethiek;be~roeps=ethiek
   # could be   ;be~roep<s>=ethiek
   # (Koningin + (n + e)) + dag <<Queen's Day>>
   Koninginnedag;Ko~nin~gin~ne=dag
   # could be   ;Ko~nin~gin<~ne>=dag

   # Croation interfix
   # (brod + o) + gradiliste <<shipyard>>
   brodogradiliste;brodo=gradiliste
   # could be     ;brod<o>=gradiliste

<87>
   Note that this should not be used of the word preceding the interfix
   has changed spelling because of its usage in the compound with an
   interfix.

4.5.  Unfavourable hyphenation
<88>
   Sometimes hyphenations can be misleading or distorting and are
   unfavourable.  This MUST be indicated by a FULL STOP U+002E or '.'.
   More than one full stop MAY be used to indicate hyphenation points
   which are extremely unfavourable.  An unfavourable hyphenation point
   MAY be preceded by a hyphenation character to indicate the type of
   hyphenation point.  In EBNF this is can be written as:
   UnfavourableHyphen
            ::= ( ( '~' | #x007E )
                | ( '|' | #x007C )
                | ( '|' | #x00A6 )
                | ( '=' | #x003D ) )?
                ( '.' | #x002E )+

<89>
   Some examples of unfavourable hyphenation are:









van Geloven                   Informational                    [Page 22]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # unfavourable hyphenation in German
   # dem + (ent + (spre + chend)) <<accordingly>>
   dementsprechend;dem=ent|.spre-chend
   # re + (in + (stal + liert) <<reinstalled>>
   reinstalliert;re|in|.stal-liert
   # Sprech + (er + (zie + hung) <<elocution>>
   Sprecherziehung;Sprech=er|.zie-hung
   # (Wind + (en + er + gie) + (an + (la + ge)))
   # <<wind-energy plant>>
   Windenergieanlage;Wind=en.er-gie==an|la-ge
   # Ost + (en + de)
   # <<toponiem of place in Belgium>>
   Ostende;Ost=en-.de

   # unfavourable hyphenation in Dutch
   # (deur + waar + ders) + (ex + ploit) [lit: bailiff abuse]
   deurwaardersexploit;deur~waar~ders=ex~..ploit
   # (Koningin + (n + e)) + dag <<Queen's Day>>
   Koninginnedag;Ko~nin~gin~.ne=dag
   # could be   ;Ko~nin~gin<~.ne>=dag































van Geloven                   Informational                    [Page 23]

RFC TODO            Hyphenation Definitions Standard        January 2014


5.  Dynamic hyphenation

5.1.  Hyphenation with alternated spelling
<90>
   Hyphenation can result in a changed spelling of the word.  How this
   affects a word depends on the language as will be seen later on.  A
   hyphenation definition of this type MUST contain both an unhyphenated
   and a hyphenated spelling for such word.  This is called a
   substitution cluster and MUST contain only the particular hyphenation
   point and adjacent character clusters that alter.
<91>
   A substitution cluster MUST be provided between curly brackets LEFT
   CURLY BRACKET U+007B or '{' and RIGHT CURLY BRACKET U+007D or '}'
   with SOLIDUS U+002F or '/' as a separator.  Left of the separator
   MUST be the unhyphenated spelling and on the right MUST be the
   hyphenated spelling.  Examples later on will clarify this
   elaborately.  The exact rule in EBFN for this is:
   SubstitutionCluster
            ::= '{' CharacterCluster '/'
                  ( CharacterCluster ( Hyphen CharacterCluster? )?
                  | Hyphen CharacterCluster? )
                '}'

<92>
   Some languages have transforming digraphs when hyphenating.  In
   German the 'c' and 'k' are orthographic allographs for /k/.  The
   digraph 'ck' can result in 'k-k' when hyphenation is in the middle of
   that digraph.  Examples of transforming digraphs with orthographic
   allographs are:
   # German with alternated spelling digraph
   # "Zucker" or
   # "Zuk-" "ker" <<sugar>>
   Zucker;Zu{ck/k~k}er

<93>
   In German it is also possible to have doubling of consonants in
   digraphs when hyphenating.  The digraph 'll' can initially be a
   shorter spelling of the trigraph 'lll', which itself is a
   concatenation of the a digraph 'll' and a glyph 'l'.  When
   hyphenation is in the first mentioned digraph, the previously
   eliminated 'l' should be restored.  Examples of restoring eliminated
   consonants from trigraphs are:









van Geloven                   Informational                    [Page 24]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # German with doubled consonant spelling
   # "Ab-" "fallager" or
   # "Abfall-" "lager" or
   # "Abfalla-" "ger" <<waste storage>>
   Abfallager;Ab~fa{ll/ll~l}a~ger
   # "Stoffuel-" "le" or
   # "Stoff-" "fuelle" <<wealth of material>>
   Stoffuelle;Sto{ff/ff=f}uel~le
   # "Vollast" or
   # "Voll-" "last" <<maximum load>> [lit: full load]
   Vollast;Vo{ll/ll=l}ast

   # Norwegian with doubled consonant spelling
   # "trykknapp" or "trykk-" "knapp" <<snap fastener>>
   trykknapp;try{kk/kk=k}napp
   # equivalent notation, less verbose but more searchable
   #trykknapp;tryk{k/k=k}napp

<94>
   Some languages have doubling of a vowel.  This occurs when stress is
   on an open syllable and a suffix added after that syllable.  This
   happens for example in Dutch for some diminutive forms.  When these
   diminutives are hyphenated on that syllable, the vowel at the end of
   an open syllable needs to be duplicated, since the stress will ensure
   proper pronunciation.  Examples of stressed open syllables with
   doubles vowels are:
   # Dutch vowel doubling in diminutive
   # "omaatje" or
   # "oma-" "tje" <<granny>> [degenitiv of grantmother]
   omaatje;oma{a/-}tje
   # equivalent notation, more verbose but less searchable
   #omaatje;om{aa/a-}tje

<95>
   In Dutch diaeresis can be used on vowels to prevent the so called
   vowel collision.  However, when hyphenating before the vowel that
   received a diaeresis, that diaeresis will be eliminated in the
   hyphenated spelling.  Examples of hyphenation definitions for
   eliminated diaeresis are:
   # Dutch eliminated diaeresis
   # "geeerd" or
   # "ge-" "eerd" <<honoured>> [past participle]
   geeerd;ge{e/-e}erd

<96>
   As stated before, a hyphen can be a valid character in a normal word.
   Hence the hyphen character is not a reserved character in this
   context.  When hyphenation on a hyphen that is already part of a



van Geloven                   Informational                    [Page 25]

RFC TODO            Hyphenation Definitions Standard        January 2014


   word, a new hyphen MUST NOT be inserted in the hyphenated text.  A
   rare counterexample was given in hyphenation of a word (Section 3.3).
   Now will follow more common examples in which a hyphen is not allowed
   to be duplicated:
   # Dutch compounds with hyphen as character
   # ex- < vriend <<former boyfriend>>
   ex-vriend;ex{-/|}vriend
   # (Dow- + Jones) + index <<Dow Jones Index>>
   Dow-Jonesindex;Dow{-/~}Jones=index
   # ((de + ja)- + vu) + gevoel <<deja vu feeling>>
   deja-vugevoel;de~ja{-/~~}vu=ge~voel
   # (gilles- + de- + la- + (tou + rette)) + (syn + droom)
   # <<Tourette syndrome>>
   #gilles-de-la-tourettesyndroom;
   #gilles{-/~~}de{-/~}la{-/~~}tou~rette=syn~droom
   # (ad + junct)- + ((al + ge + meen) + (di + rec + teur))
   # <<vice managing director>>
   adjunct-algemeendirecteur;ad~junct{-/==}al~ge~meen=di~rec~teur

   # English compound with hyphen as character
   # (ac + tor)- + (di + rec + tor)
   actor-director;ac~tor{-/=}di~rec~tor

5.2.  Hyphenation of heteronyms
<97>
   A word with multiple meanings but with the same spelling is called a
   heteronym.  Some heteronyms can differ in syllabification and
   pronunciation even though they are spelled with exactly the same
   characters.  Examples in English are desert (leave to or barren area
   of land) and dove (pigeon or past tense to dive).  A difference in
   pronunciation can result in different hyphenation points for each
   meaning of the heteronym, which is more probable in German or Dutch
   than in for example English.
<98>
   When this is the case, the following heteronym cluster MUST be used
   for the hyphenation definition.  Here a LEFT SQUARE BRACKET U+005B or
   '[' and a RIGHT SQUARE BRACKET U+005D or ']' MUST be used to group
   alternatives inside a hyphenation definition.  These MUST be
   separated a SOLIDUS U+002F or '/'.  In the following rules in EBNF
   only two alternatives are allowed.  The order of the alternatives is
   not important.  However, the grammar introduces a small difference
   for the left and right side of the separator.  One side, and only one
   side, of the separator may be empty to accommodate for certain
   definitions.  Therefore always one side of the separator MUST hold a
   definition.  This is in EBNF:






van Geloven                   Informational                    [Page 26]

RFC TODO            Hyphenation Definitions Standard        January 2014


   Series
            ::= ( CharacterCluster (Hyphen CharacterCluster)* Hyphen? )
              | ( Hyphen (CharacterCluster Hyphen)* CharacterCluster? )
   HeteronymCluster
            ::= '[' ( Series | (SubstitutionCluster Series? ) ) '/'
                    SubstitutionCluster? Series? ']'

<99>
   The use of a nested substitution cluster will be described later on
   (Section 5.3).  Rare but valid examples with alternative hyphenation
   behaviour for heteronyms are:
   # English heteronyms
   # rec + ord <<vinyl medium>>
   # re + cord <<first-person present of verb to record>>
   record;re[~c/c~]ord
   # wa + les <<plural of whale>> or
   # Wales <<toponiem of part of UK>>
   wales;wa[~/]les

   # German heteronyms
   # Mas + ke or Maske
   Maske;Mas[~/]ke
   # Wach + (stu + be) <<guardroom>> or
   # Wachs + (tu + be) <<wax tube>>
   Wachstube;Wach[=s/s=]tu-be
   # (Bahn + hof) + (strasse) [lit: station street] or
   # (Bahn + hof) + s + (trasse) [lit: station's route]
   Bahnhofstrasse;Bahn=hof[==stra-ss/s==tras-s]e

   # Dutch heteronyms
   # bal + le + tje <<degerailnitiv of ball>> or
   # bal + let + je <<degenitiv of ballet>>
   balletje;bal~le[~t/t~]je
   # valk + uil <<ninox>> [lit: falcon owl] or
   # val + kuil <<trapping pit>> [lit: trap pit]
   valkuil;val[k=/=k]uil

<100>
   Note that there is not a preferred order of mirrored heteronym
   clusters but a fixed order could prove practical for automated
   processing such as validation.
<101>
   Automated hyphenation of heteronyms poses an interesting challenge.
   How can the hyphenation recognise which hyphenation pattern to use?
   This is out of scope for this standard but important to discuss.  All
   other forms of hyphenation can be handled directly by a hyphenation
   algorithm but here extra information is need.  This could be
   extracted from the context but can proof difficult if no context is



van Geloven                   Informational                    [Page 27]

RFC TODO            Hyphenation Definitions Standard        January 2014


   available or the context is ambiguous.  On the other hand, the author
   of a text could provide the needed information.  This could be stored
   in soft hyphens for examples.  The hyphenator could assist the author
   here by playing an interactive role.  Similarly to spell checking the
   author could be asked which meaning of a heteronym is meant by having
   the author selecting between expanded hyphenation patterns.
<102>
   Something that has not been discussed up to this point, but is
   illustrated in the previous example with wales and Wales, is case
   sensitivity of hyphenation patterns.  Hyphenation definitions MUST be
   specified as case sensitive as possible.  TODO heteronum!!  In case
   capitalised, upper case and/or lower case are merged a lower case
   notation is RECOMMENDED to be used, followed by capitalised and
   finally upper case.  Reasons for this that casting to upper case or
   capitalised spelling can result in information reduction whereas
   casting to lower case can not restore the eliminated information.
   Examples:
   # German irriversable up and down casting
   # Masse upvast -> MASSE
   # MASSE ambiguous downcast -> Masse or Masse
   # LATIN CAPITAL LETTER SHARP S U+1E9E is rarely used

   # Dutch irriversable up and down casting
   # officieren upcast -> OFFICIEREN
   # OFFICIEREN ambiguous downcast -> officieren or officieren
   # gene upcast -> GENE
   # GENE ambiguous downcast -> gene or gene
   # Dutch does not use diacritical marks in all upper case words

5.3.  Nested hyphenation
<103>
   Nesting of a substitution cluster inside a heteronym cluster MAY be
   done.  This is already defined in the grammar for heteronym
   hyphenation (Section 5.2).  Here the priority is on the enclosing
   heteronym cluster.  Deeper or other ways of nesting clusters is not
   allowed.  This is very rare but some examples for German are:















van Geloven                   Informational                    [Page 28]

RFC TODO            Hyphenation Definitions Standard        January 2014


   # German de-1901 nested hyphenation definitions
   # TODO or
   # TODO
   Bettuecher;Be[t=tue~/{tt/tt=t}ue.]cher
   # TODO or
   # TODO
   Druckerzeugnis;Dru[{ck/k~k}er~/ck=er.]zeug~nis
   # TODO or
   # TODO
   Fussballehren;Fuss=ba[ll=/{ll/ll=l}]eh~ren
   # TODO or
   # TODO
   griffest;gri[f~f/{ff/ff=f}]est
   # TODO or
   # TODO
   Irreligion;I[{rr/rr=r}/r|r]e.li~gi-on
   # TODO or
   # TODO
   Staubecken;Stau[~b/b~]e{ck/k~k}en
































van Geloven                   Informational                    [Page 29]

RFC TODO            Hyphenation Definitions Standard        January 2014


6.  Hyphenation priority
<104>
   The following hyphenation priority is defined:
   01 [] hyphenation of heteronym,
          definition depends on semantics
   02 {} dynamic hyphenation,
          change of spelling
   03 =| hyphenation of compound's suffix,
          multiple = have higher priority
   04 |= hyphenation of compound's prefix,
          multiple = have higher priority
   05 =  hyphenation of compound,
          multiple = have higher priority
   06 |  hyphenation of word's suffix,
          priority order is from right to left
   07 |  hyphenation of word's prefix,
          priority order is from left to right
   08 ~  hyphenation of word,
          multiple ~ have higher priority
   09 =. unfavourable hyphenation of compound,
          multiple . have lower priority
   10 |. unfavourable hyphenation of word's suffix,
          multiple . have lower priority
   11 |. unfavourable hyphenation of word's prefix,
          multiple . have lower priority
   12 ~. unfavourable hyphenation of word,
          multiple . have lower priority
   13 .  unfavourable hyphenation in general,
          multiple . have lower priority






















van Geloven                   Informational                    [Page 30]

RFC TODO            Hyphenation Definitions Standard        January 2014


7.  Reserved characters
<105>
   Reserved characters for this format are:
   /* Hyphenation Definitions 0.8
    * TODO URL
    *
    * Reserved characters
    * tab                         U+0009  CHARACTER TABULATION  '\t'
    * line feed                   U+000A  LINE FEED (LF)        '\n'
    * carriage return             U+000D  CARRIAGE RETURN (CR)  '\r'
    * space                       U+0020  SPACE                 ' '
    * begin comment               U+0023  NUMBER SIGN           '#'
    * unfavourable hyphen         U+002E  FULL STOP             '.'
    * cluster separator           U+002F  SOLIDUS               '/'
    * delimiter                   U+003B  SEMICOLON             ';'
    * compound hyphen             U+003D  EQUALS SIGN           '='
    * begin heteronym cluster     U+005B  LEFT SQUARE BRACKET   '['
    * end heteronym cluster       U+005D  RIGHT SQUARE BRACKET  ']'
    * begin substitution cluster  U+007B  LEFT CURLY BRACKET    '{'
    * prefix hyphen               U+007C  VERTICAL LINE         '|'
    * end substitution cluster    U+007D  RIGHT CURLY BRACKET   '}'
    * morpheme hyphen             U+007E  TILDE                 '~'
    * suffix hyphen               U+00A6  BROKEN BAR            '|'
    */

<106>
   Additionally, other characters may be used as placeholders inside of
   definitions where a hyphenation needs (re)work or reviewing.  The
   following are recommended because these are rarely found in words and
   are visually quickly identified.  The usage of these falls outside
   the definition of this format and should be filtered out before
   providing hyphenation patterns that comply with this standard.
   Examples are:
   # Examples of placeholders for reviewing purposes
   #raeche;rae.che # U+00B7 MIDDLE DOT '.'
   #radio;ra*dio # U+002A ASTERISK '*'
   #tafel;ta_fel # U+005F LOW LINE '_'

<107>
   Note that the middle dot '.' can be part of a orthography such as
   Catalan of Franco-Provencal.  Use it with care.  See also the section
   on compound interfix (Section 4.4) for characters used to make
   interfix annotations.








van Geloven                   Informational                    [Page 31]

RFC TODO            Hyphenation Definitions Standard        January 2014


8.  References

   [ISO14977]
              International Organization for Standardization (ISO) and
              the International Electrotechnical Commission (IEC), JTC
              1, "Information technology -- Syntactic metalanguage --
              Extended BNF", ISO/IEC 14977:1996, December 1996, <http://
              www.iso.org/iso/home/store/catalogue_tc/
              catalogue_detail.htm?csnumber=26153>.

   [Lia83]    Liang, F., "Word Hy-phen-a-tion by Com-put-er",
              August 1983, <http://www.tug.org/docs/liang/>.

   [Gel14]    van Geloven, S., "A standard for prioritised and dynamic
              hyphenation definitions", January 2014,
              <http://www.opentaal.org/TODO>.

   [UNICODE]  The Unicode Consortium, "The Unicode Standard, Version
              6.3.0", September 2013,
              <http://www.unicode.org/versions/Unicode6.3.0/>.

   [Nem06]    Nemeth, L., "Automatic non-standard hyphenation in
              OpenOffice.org", October 2006,
              <https://www.tug.org/TUGboat/tb27-1/>.

   [RFC2119]  Brander, S., "Key words for use in RFCs to Indicate
              Requirement Levels", RFC 2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [BCP47]    Phillips, A. and M. Davis, "Tags for Identifying
              Languages", BCP 47, September 2006,
              <https://www.rfc-editor.org/info/bcp47>.

   [TRENNMP]  DANTE, Deutschsprachige Anwendervereinigung TeX e.V.,
              "Trennmuster", January 2014,
              <http://projekte.dante.de/Trennmuster>.















van Geloven                   Informational                    [Page 32]

RFC TODO            Hyphenation Definitions Standard        January 2014


Appendix A.  Grammar
<108>
   The complete grammar for this format of hyphenation definitions is in
   Extended Backus-Naur Form (EBNF) [ISO14977]:
   /* Hyphenation Definitions 0.8
    * TODO URL
    *
    * Reserved characters
    * tab                         U+0009  CHARACTER TABULATION  '\t'
    * line feed                   U+000A  LINE FEED (LF)        '\n'
    * carriage return             U+000D  CARRIAGE RETURN (CR)  '\r'
    * space                       U+0020  SPACE                 ' '
    * begin comment               U+0023  NUMBER SIGN           '#'
    * unfavourable hyphen         U+002E  FULL STOP             '.'
    * cluster separator           U+002F  SOLIDUS               '/'
    * delimiter                   U+003B  SEMICOLON             ';'
    * compound hyphen             U+003D  EQUALS SIGN           '='
    * begin heteronym cluster     U+005B  LEFT SQUARE BRACKET   '['
    * end heteronym cluster       U+005D  RIGHT SQUARE BRACKET  ']'
    * begin substitution cluster  U+007B  LEFT CURLY BRACKET    '{'
    * prefix hyphen               U+007C  VERTICAL LINE         '|'
    * end substitution cluster    U+007D  RIGHT CURLY BRACKET   '}'
    * morpheme hyphen             U+007E  TILDE                 '~'
    * suffix hyphen               U+00A6  BROKEN BAR            '|'
    */
   HyphenationDefinitions
            ::= ( EOL* HyphenationDefinition? WhiteSpace? Comment? )*
   EOL
            ::= ( '\r' | #x000D ) ( '\n' | #x000A )?
              | ( '\n' | #x000A )
   WhiteSpace
            ::= ( ( ' ' | #x0009 )
                | ( '\t' | #x0020 ) )+
   Comment
            ::= '#' ( [#x0009]
                    | [#x0020-#xD7FF]
                    | [#xE000-#xFFFD]
                    | [#x10000-#x10FFFF] )*
   HyphenationDefinition
            ::= Word Delimiter Definition
   Delimiter
            ::= ';' | #x003B
   Word
            ::= Character Character+
   Character
            ::= [#x0021-#x0022]
              | [#x0024-#x002D]
              | [#x0030-#x003A]



van Geloven                   Informational                    [Page 33]

RFC TODO            Hyphenation Definitions Standard        January 2014


              | [#x003C]
              | [#x003E-#x005A]
              | [#x005C]
              | [#x005E]
              | [#x0060-#x007A]
              | [#x007F-#x00A5]
              | [#x00A7-#xD7FF]
              | [#xE000-#xFFFD]
              | [#x10000-#x10FFF]
   Definition
            ::= Cluster ( Hyphen Cluster )*
   Hyphen
            ::= MorphemeHyphen
              | SuffixHyphen
              | PrefixHyphen
              | CompoundHyphen
              | CompoundSuffixHyphen
              | CompoundPrefixHyphen
              | UnfavourableHyphen
   MorphemeHyphen
            ::= ( '~' | #x007E )+
   SuffixHyphen
            ::= '|' | #x00A6
   PrefixHyphen
            ::= '|' | #x007C
   CompoundHyphen
            ::= ( '=' | #x003D )+

   CompoundSuffixHyphen
            ::= ( '=' | #x003D )+ ( '|' | #x00A6 )

   CompoundPrefixHyphen
            ::= ( '|' | #x007C ) ( '=' | #x003D )+

   UnfavourableHyphen
            ::= ( ( '~' | #x007E )
                | ( '|' | #x007C )
                | ( '|' | #x00A6 )
                | ( '=' | #x003D ) )?
                ( '.' | #x002E )+
   Cluster
            ::= ( CharacterCluster
                | SubstitutionCluster
                | HeteronymCluster )+
   CharacterCluster
            ::= Character+
   SubstitutionCluster
            ::= '{' CharacterCluster '/'



van Geloven                   Informational                    [Page 34]

RFC TODO            Hyphenation Definitions Standard        January 2014


                  ( CharacterCluster ( Hyphen CharacterCluster? )?
                  | Hyphen CharacterCluster? )
                '}'
   Series
            ::= ( CharacterCluster (Hyphen CharacterCluster)* Hyphen? )
              | ( Hyphen (CharacterCluster Hyphen)* CharacterCluster? )
   HeteronymCluster
            ::= '[' ( Series | (SubstitutionCluster Series? ) ) '/'
                    SubstitutionCluster? Series? ']'

<109>
   This grammar can be visualised in a railroad diagram by means of
   http://bottlecaps.de/rr/ui for example.






































van Geloven                   Informational                    [Page 35]

RFC TODO            Hyphenation Definitions Standard        January 2014


Appendix B.  Acknowledgements
<110>
   The author gratefully acknowledges, in alphabetical order, the
   contributions of Ruud Baars, Simon Brouwer, Arnoud van den
   Eerenbeemt, Bart Knubben, Stephan Hennig, Werner Lemberg, Bob van de
   Loo, Mojca Miklavec, Guenther Milde, Georg Pfeiffer, Kurt Roeckx,
   Reinout van Schrouwen, Bert Veenhoff, Herbert Voss and Tobias
   Wendorff.  Most of them are contributing to Stichting OpenTaal,
   Nederlandstalige TeX Gebruikersgroep (NTG) or DANTE's Trennmuster
   project.
<111>
   This standard is based on a poster presentation [Gel14] at the 24th
   Meeting of Computational Linguistics in The Netherlands (CLIN24),
   Leiden, Netherlands, January 17th, 2014.  Thanks go to the Institute
   for Dutch Lexicology (INL) and the Dutch-Flemish HLT Agency (TST-
   Centrale) for the organisation.



































van Geloven                   Informational                    [Page 36]

RFC TODO            Hyphenation Definitions Standard        January 2014


Author's Address

   Sander van Geloven
   Stichting OpenTaal
   Netherlands

   Email: sander.vangeloven@opentaal.org
   URI:   http://www.opentaal.org











































van Geloven                   Informational                    [Page 37]

